/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

/**
 *
 * @author Muhammad Nabil Ma'ru
 */
import Controller.PeminjamanController;
import Model.PeminjamanModel;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MenuStaff extends javax.swing.JFrame {
    private PeminjamanController controller;
    
    
    public MenuStaff() throws SQLException {
        initComponents();
        controller = new PeminjamanController();
        loadTableData();
    }
    private void loadTableData() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Hapus semua data sebelumnya

        try {
            List<PeminjamanModel> peminjamanList = controller.getAllPeminjaman();

            // Periksa jika data tidak kosong
            if (peminjamanList == null || peminjamanList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tidak ada data peminjaman yang tersedia.");
                return;
            }

            for (PeminjamanModel peminjaman : peminjamanList) {
                Object[] rowData = {
                    peminjaman.getId(),
                    peminjaman.getKelas(),
                    peminjaman.getProdi(),
                    peminjaman.getTanggal(),
                    peminjaman.getWaktu(),
                    peminjaman.getStatus()
                };
                model.addRow(rowData); // Tambahkan data ke tabel
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memuat data peminjaman.");
            ex.printStackTrace(); // Tambahkan logging untuk memeriksa kesalahan
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AcceptButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(39, 45, 90));
        jLabel8.setText("Sistem Aplikasi Peminjaman Ruangan");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, -1, -1));

        jLabel9.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(39, 45, 90));
        jLabel9.setText("Fakultas Teknik Universitas Mulawarman");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, -1, -1));

        jLabel3.setFont(new java.awt.Font("Poppins", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(39, 45, 90));
        jLabel3.setText("ClassThink");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, 50));

        AddButton.setBackground(new java.awt.Color(39, 45, 90));
        AddButton.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        AddButton.setForeground(new java.awt.Color(255, 255, 255));
        AddButton.setText("Tambah Ruangan");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 150, 40));

        DeleteButton.setBackground(new java.awt.Color(255, 0, 51));
        DeleteButton.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        DeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        DeleteButton.setText("Hapus");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(DeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 80, 40));

        UpdateButton.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        UpdateButton.setText("Ubah");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(UpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 140, 40));

        jButton5.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jButton5.setText("Kembali");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 690, 150, 40));

        jTable1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"C404", "Sistem Informasi", "Senin, 26 Juni 2024", "07.30 - 09.00", "Unavailable", null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Kelas", "Kelas", "Prodi", "Hari & Tanggal", "Waktu", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFillsViewportHeight(true);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable1ComponentAdded(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 760, 360));

        AcceptButton.setBackground(new java.awt.Color(0, 204, 0));
        AcceptButton.setForeground(new java.awt.Color(255, 255, 255));
        AcceptButton.setText("ACC");
        AcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AcceptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 240, 80, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Untitled design (2).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        StaffTambah at = new StaffTambah();
        at.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
    // Memastikan baris dipilih sebelum melanjutkan proses penghapusan
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus.");
        return;
    }

    // Mendapatkan ID peminjaman dari baris yang dipilih
    String idPeminjaman = jTable1.getValueAt(selectedRow, 0).toString();

    // Konfirmasi sebelum penghapusan
    int confirmation = JOptionPane.showConfirmDialog(this, 
        "Apakah Anda yakin ingin menghapus data ini?", 
        "Konfirmasi Hapus", 
        JOptionPane.YES_NO_OPTION);

    if (confirmation == JOptionPane.YES_OPTION) {
        try {
            // Memanggil metode di controller untuk menghapus data
            boolean berhasil = controller.deletePeminjaman(idPeminjaman);
            if (berhasil) {
                JOptionPane.showMessageDialog(this, "Data peminjaman berhasil dihapus.");
                loadTableData(); // Refresh data di tabel
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data peminjaman.");
            }
        } catch (Exception ex) {
            Logger.getLogger(MenuStaff.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data. Mohon coba lagi.");
        } 
        
    }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin diupdate.");
        return;
    }

    // Mengambil data dari baris yang dipilih di jTable1
    String idPeminjaman = jTable1.getValueAt(selectedRow, 0).toString();
    String namaKelas = jTable1.getValueAt(selectedRow, 1).toString();
    String prodi = jTable1.getValueAt(selectedRow, 2).toString();
    String hariTanggal = jTable1.getValueAt(selectedRow, 3).toString();
    String waktu = jTable1.getValueAt(selectedRow, 4).toString();
    String status = jTable1.getValueAt(selectedRow, 5).toString();

    // Menampilkan form StaffEdit dengan data yang dipilih
    StaffEdit ae = new StaffEdit();
    ae.setVisible(true);

    // Mengirim data ke form StaffEdit
    ae.setData(idPeminjaman, namaKelas, prodi, hariTanggal, waktu, status);

    // Menutup form saat ini jika perlu
    this.dispose();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void jTable1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1ComponentAdded

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Login LoginKembali = new Login();
        LoginKembali.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            // Anda dapat mengambil data dari baris yang dipilih, misalnya idPeminjaman:
            String idPeminjaman = jTable1.getValueAt(selectedRow, 0).toString();
            System.out.println("Data yang dipilih: " + idPeminjaman);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void AcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptButtonActionPerformed
        // TODO add your handling code here:
     // Memastikan baris dipilih sebelum melanjutkan
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin diterima.");
        return;
    }

    // Mendapatkan ID peminjaman dari baris yang dipilih
    String idPeminjaman = jTable1.getValueAt(selectedRow, 0).toString();

    // Mengambil data peminjaman berdasarkan ID
    PeminjamanModel peminjaman = controller.getPeminjamanById(idPeminjaman);
    if (peminjaman == null) {
        JOptionPane.showMessageDialog(this, "Data peminjaman tidak ditemukan.");
        return;
    }

    // Konfirmasi status
    int confirmation = JOptionPane.showConfirmDialog(this, 
        "Apakah Anda yakin ingin menyetujui peminjaman ini?", 
        "Konfirmasi Persetujuan", 
        JOptionPane.YES_NO_OPTION);

    if (confirmation == JOptionPane.YES_OPTION) {
        // Mengupdate status peminjaman
        peminjaman.setStatus("Dipinjam"); // Set status baru

        try {
            // Memanggil metode updatePeminjaman dari PeminjamanController
            boolean berhasil = controller.updatePeminjaman(peminjaman);
            if (berhasil) {
                JOptionPane.showMessageDialog(this, "Peminjaman berhasil disetujui.");
                loadTableData(); // Refresh data di tabel
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyetujui peminjaman.");
            }
        } catch (Exception ex) {
            Logger.getLogger(MenuStaff.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyetujui peminjaman.");
        }
    }
    }//GEN-LAST:event_AcceptButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MenuStaff().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(MenuStaff.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptButton;
    private javax.swing.JButton AddButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
